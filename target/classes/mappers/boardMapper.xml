<?xml version="1.0" encoding="UTF-8"?>
<!--
     Mapper 인터페이스를 이용하는 또 다른 장점은 기존의 XML 을
      그대로 사용할 수 있음.
      이때 두가지 규칙이 있음.
      1. Mapper 인터페이스 이름과 XML Mapper 의 네임스페이스를 반드시
        일치시킬 것.
      2. Mapper 인터페이스의 메서드 이름과 XML 의 id 를 반드시 일치시킴.
      root-context.xml :: sqlSessionFactory 에 매퍼 xml 파일의 경로를 인식하게 함.
-->

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.edu.dao.IF_BoardDAO">
   <insert id="insertBoard"> <!-- 입력쿼리 -->
   <!-- updatedate는 수정한 날짜가 들어갑니다 나중에 regdate가 빠지고 updatedate가 들어갑니다.-->
   <!--  쿼리의 순서는 똑같이 넣어줘어야 합니다. -->
      insert into tbl_board (title, content, writer, regdate, view_count, reply_count)
      <!-- 형식이라요 -->
      values #{title}, #{content}, #{writer}, now() ,#{view_count}, #{reply_count})
   </insert>
   <!-- crud 쿼리 작성 -->
   <!-- 조회 -->
   <select id="selectBoard" resultType="org.edu.vo.BoardVO">
      select * from tbl_board order by bno DESC; <!-- DESC = 내림차순  -->
   </select>
   <!-- 수정 -->
   
   <update id="updateBoard">
      update tbl_member set
      title  = #{title},
      content = #{content},
      writer = #{writer},
      update_date = now(),
      view_count = #{view_count},
      reply_count = #{reply_count},
      where bno = #{bno}
   </update>
   <delete id="deleteBoard">
      delete from tbl_board where bno = #{bno}
   </delete>
<select id="viewBoard" resultType="org.edu.vo.BoardVO">
      select * from tbl_board where bno = #{bno}
   </select>
</mapper>